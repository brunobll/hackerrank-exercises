//Solution using the hackerrank tests and inputs

#include<iostream> 
using namespace std; 

void printArray(int *arrayTeste, int sizeOfArray){
    
    for(int i = 0; i < sizeOfArray; i++){
        cout << arrayTeste[i] << " ";
    }

    cout << endl;    
}

void insertionSort(int *arrayOfNumbers, int sizeOfArray){
    int lastElement = arrayOfNumbers[sizeOfArray - 1];

    for(int i = sizeOfArray - 2; i >= 0; i--){    

        if(arrayOfNumbers[i] > lastElement){

            
            if(i != 0){
                
                arrayOfNumbers[i+1] = arrayOfNumbers[i];
                printArray(arrayOfNumbers, sizeOfArray);
            }

        
            else if(i == 0){
                arrayOfNumbers[i+1] = arrayOfNumbers[i];
                printArray(arrayOfNumbers, sizeOfArray);
                arrayOfNumbers[i] = lastElement;
                printArray(arrayOfNumbers, sizeOfArray);
                break;
            }
        }

        else if(arrayOfNumbers[i] < lastElement){
            arrayOfNumbers[i+1] = lastElement;
            printArray(arrayOfNumbers, sizeOfArray);
            break;
        }

        else if(arrayOfNumbers[i] == lastElement){
            arrayOfNumbers[i] = lastElement;
            printArray(arrayOfNumbers, sizeOfArray);
        }
    }

}

int main(){
    int sizeOfArray;
    
    cin >> sizeOfArray;
    int arrayOfNumbers[sizeOfArray];

    for(int z = 0; z < sizeOfArray; z++){
        cin >> arrayOfNumbers[z];
    }

    insertionSort(arrayOfNumbers, sizeOfArray);

    return 0;
}

-----------------------------------------------------------------------------
//Solution made in Sublime Text using main-declared tests

#include<iostream> 
using namespace std; 

void printArray(int *arrayTeste, int sizeOfArray){
	
	for(int i = 0; i < sizeOfArray; i++){
		cout << arrayTeste[i] << " ";
	}

	cout << endl;	
}

void insertionSort(int *arrayOfNumbers, int sizeOfArray){
	int lastElement = arrayOfNumbers[sizeOfArray - 1];

	for(int i = sizeOfArray - 2; i >= 0; i--){	

		if(arrayOfNumbers[i] > lastElement){

			//if i != 0, than i isn`t in the first index of the array
			if(i != 0){
				
				arrayOfNumbers[i+1] = arrayOfNumbers[i];
				printArray(arrayOfNumbers, sizeOfArray);
			}

			//if i == 0, than the counter is on the first index in the array
			else if(i == 0){
				arrayOfNumbers[i+1] = arrayOfNumbers[i];
				printArray(arrayOfNumbers, sizeOfArray);
				arrayOfNumbers[i] = lastElement;
				printArray(arrayOfNumbers, sizeOfArray);
				break;
			}
		}

		else if(arrayOfNumbers[i] < lastElement){
			arrayOfNumbers[i+1] = lastElement;
			printArray(arrayOfNumbers, sizeOfArray);
			break;
		}

		else if(arrayOfNumbers[i] == lastElement){
			arrayOfNumbers[i] = lastElement;
			printArray(arrayOfNumbers, sizeOfArray);
		}
	}

}

int main(){
	int sizeOfArray = 5;
	int arrayOfNumbers[sizeOfArray] = {1, 2, 4, 5, 3};

	insertionSort(arrayOfNumbers, sizeOfArray);

	return 0;
}
